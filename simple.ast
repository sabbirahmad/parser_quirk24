(program ((protoDec list (T) () ((funProto empty () () (typeApp list ( (tVar T)  ))) (funProto with () ((formal (tVar T) z) ) (typeApp list ( (tVar T)  ))) (funProto isEmpty () () (bool)) (funProto first () () (tVar T)) (funProto rest () () (typeApp list ( (tVar T)  ))) (funProto last () () (tVar T)) (funProto butLast () () (typeApp list ( (tVar T)  ))) (funProto followedBy () ((formal (typeApp list ( (tVar T)  )) x) ) (typeApp list ( (tVar T)  ))) (funProto forEach (T2) ((formal (funType ((tVar T) ) (tVar T2)) f) ) (void)) (funProto map (T2) ((formal (funType ((tVar T) ) (tVar T2)) f) ) (typeApp list ( (tVar T2)  ))) )) ) ((classDec emptyList (T) ((typeApp list ( (tVar T)  )) ) (init ()(block () ())) ((funDec empty() () (typeApp list ( (tVar T)  )) (block () ((return this ) ))) (funDec with() ((formal (tVar T) z) ) (typeApp list ( (tVar T)  )) (block () ((return (newObject (classApp linkedList((tVar T) ))(this  z  ))) ))) (funDec isEmpty() () (bool) (block () ((return (true) ) ))) (funDec first() () (tVar T) (block () ((halt (stringLiteral "first not defined on empty list") ) ))) (funDec rest() () (typeApp list ( (tVar T)  )) (block () ((halt (stringLiteral "rest not defined on empty list") ) ))) (funDec last() () (tVar T) (block () ((halt (stringLiteral "last not defined on empty list") ) ))) (funDec butLast() () (typeApp list ( (tVar T)  )) (block () ((halt (stringLiteral "butLast not defined on empty list") ) ))) (funDec followedBy() ((formal (typeApp list ( (tVar T)  )) x) ) (typeApp list ( (tVar T)  )) (block () ((return x ) ))) (funDec forEach(T2) ((formal (funType ((tVar T) ) (tVar T2)) f) ) (void) (block () ())) (funDec map(T2) ((formal (funType ((tVar T) ) (tVar T2)) f) ) (typeApp list ( (tVar T2)  )) (block () ((return (newObject (classApp emptyList((tVar T2) ))())) ))) )) (classDec linkedList (T) ((typeApp list ( (tVar T)  )) ) (init ((formal (typeApp list ( (tVar T)  )) x) (formal (tVar T) z) )(block () ((expStm (assign (dot this  prefix) x )) (expStm (assign (dot this  lastItem) z )) ))) ((fieldDec (formal (typeApp list ( (tVar T)  )) prefix)) (fieldDec (formal (tVar T) lastItem)) (funDec empty() () (typeApp list ( (tVar T)  )) (block () ((return (newObject (classApp emptyList((tVar T) ))())) ))) (funDec with() ((formal (tVar T) z) ) (typeApp list ( (tVar T)  )) (block () ((return (newObject (classApp linkedList((tVar T) ))(this  z  ))) ))) (funDec isEmpty() () (bool) (block () ((return (false) ) ))) (funDec first() () (tVar T) (block () ((if (call (dot (dot this  prefix) isEmpty) ()) (return (dot this  lastItem)) (return (call (dot (dot this  prefix) first) ()))) ))) (funDec rest() () (typeApp list ( (tVar T)  )) (block () ((if (call (dot (dot this  prefix) isEmpty) ()) (return (dot this  prefix)) (return (call (dot (call (dot (dot this  prefix) rest) ()) with) ((dot this  lastItem) )))) ))) (funDec last() () (tVar T) (block () ((return (dot this  lastItem)) ))) (funDec butLast() () (typeApp list ( (tVar T)  )) (block () ((return (dot this  prefix)) ))) (funDec followedBy() ((formal (typeApp list ( (tVar T)  )) x0) ) (typeApp list ( (tVar T)  )) (block ((varDec (typeApp list ( (tVar T)  )) result this ) (varDec (typeApp list ( (tVar T)  )) x x0 ) ) ((while (unOpn ! (call (dot x  isEmpty) ()) ) (block () ((expStm (assign result  (call (dot result  with) ((call (dot x  first) ()) )))) (expStm (assign x  (call (dot x  rest) ()))) ))) (return result ) ))) (funDec forEach(T2) ((formal (funType ((tVar T) ) (tVar T2)) f) ) (void) (block () ((expStm (call (dot this  map) (f  ))) ))) (funDec map(T2) ((formal (funType ((tVar T) ) (tVar T2)) f) ) (typeApp list ( (tVar T2)  )) (block ((varDec (typeApp list ( (tVar T2)  )) result (call (dot (dot this  prefix) map) (f  ))) ) ((expStm (assign result  (call (dot result  with) ((call f  ((dot this  lastItem) )) )))) (return result ) ))) )) ) (skip))
