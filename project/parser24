#!/bin/sh

#/* Sabbir Ahmad */
#/* ahmad.sab@husky.neu.edu */

######################## parser24 - what it does ##########################

# This script generates the Quirk24 parser
# The parser runs on Quirk24 source file to generate abstract syntax tree

############################# how it works ################################

# it takes two arguments: 
#       first argument: source file (i.e. example.q24)
#       second argument: abstract syntax file (i.e. example.ast)

# command: ./parser24 example.q24 example.ast

## ***************************** cleaning ****************************** ##

# if the first argument is "clean" then it cleans the directory by 
# deleting files generated from flex, bison and gcc

# command: ./parser24 clean

########################## script starts here ############################

if [ "$1" == "clean" ]
then
	echo "cleaning ... \c"
	rm -f parser_generator.tab.c lex.yy.c run_parser.out lexical_analyzer.out parser_generator.tab.h 
	echo 'Done!'
        exit 0
fi

flex lexical_analyzer.l                         # build lexical analyzer
bison -d parser_generator.y                     # build the parser
gcc parser_generator.tab.c lex.yy.c -o run_parser.out   # build and linkup executable

./run_parser.out $1 > $2                # run the parser

#./cleanup24 $2 $2                      # uncomment this command to get the cleaned up version of AST
                                        # the "cleanup24" script must be present in the folder

########################### script ends here ##############################
